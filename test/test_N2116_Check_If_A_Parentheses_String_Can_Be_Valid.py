from unittest import TestCase
from problems.N2116_Check_If_A_Parentheses_String_Can_Be_Valid import Solution

class TestSolution(TestCase):
    def test_can_be_valid(self):
        self.assertTrue(Solution().canBeValid(s = "))()))", locked = "010100"))

    def test_can_be_valid_1(self):
        self.assertTrue(Solution().canBeValid(s = "()()", locked = "0000"))

    def test_can_be_valid_2(self):
        self.assertFalse(Solution().canBeValid(s = ")", locked = "0"))

    def test_can_be_valid_3(self):
        self.assertFalse(Solution().canBeValid("(()(())))())))))())(()(()()()))())()))())(((()())))(()))(()())))(()())())(()())(((()()()())(((()))))))((()()()))))(((()()(()()((())()())))())(()(())()((()(())(()))))()()((()))()))((()(()()())))))()))))()()()()))(((()))())))()()(()))()((())))(())(())()()(((())(()()((()((()(()((()()()()()))()()(()((((())()((()(((())))()(((()(()()()))((()(())(()()(((()))()(((()))()())))))(()(()()((()(()()(())()())()()(())((())(()(()())())))())()(())))))))(()(()))()()()())))))(()))(()())())(())()()()(()())()())((())))(())())())())))((())())())()()(((()))))())(()((()(())(())())(((()))((())(()()))(()()())(((()(()())()))))((()((((()(())((()()()))))))(()))()))())(((((())))((())(()))))))())))())))()())))())((()(((()(((())())(()))))()()))())())))()))))))))))(()(())))))()(()(()()", "101100010010110001111010010001101001010010010111101101000110000100101000001100001000101100000001001000110000000010101011001001011001111100011011100111000001100100101100110110111001101011011010101000001111001010011101101100111110110011001010110010110011101000010010011001101011000100110011100010011010101000101010010101000010000000100001000001110000010110001111011001100000110100010000100101010001010001001100001111101011011110100001011011111101101101001000010101001011101110011010101000000111101110010000010101001100111101001101000010010111010110001100111000110101001101101011111011011111101110011101000110010100000100100010001100010100011111001010010101010100011000110111110001010101011101100011101010011100100100001010101010110100101101110011100010111001011111"))
